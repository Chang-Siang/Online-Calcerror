{"version":3,"sources":["components/Header/Header.jsx","components/Footer/Footer.jsx","lib/Metrics.js","components/Calculator/ForecastReader.jsx","components/Calculator/ClacScore.jsx","components/Calculator/Calculator.jsx","components/Ranking/BasicTable.jsx","components/Ranking/Ranking.jsx","components/App.js","serviceWorker.js","index.js"],"names":["Header","className","Container","Nav","justify","variant","defaultActiveKey","Item","Link","eventKey","as","NavLink","to","exact","activeClassName","disabled","Footer","href","title","error","real","pred","mean","val","total","i","length","mse","squaredError","push","Math","pow","MAPE","absolutePercentageError","abs","papaparseOptions","header","dynamicTyping","skipEmptyLines","transformHeader","toLowerCase","replace","ForecastReader","handleForce","onFileLoaded","parserOptions","ClacScore","mape","nrmse","Row","Col","xs","Badge","pill","OverlayTrigger","overlay","Tooltip","toFixed","Calculator","ajaxServerItemAdd","addItem","payload","fetch","ajaxUrl","method","headers","body","JSON","stringify","then","response","ok","Error","statusText","json","item","alert","catch","console","getRealData","state","getPredData","dataCleaning","data","newData","map","value","Number","isNaN","log","calculateScore","e","preventDefault","newReal","newPred","splice","sqrt","nRMSE","setState","isFileUpload","applyData","target","fileName","validExts","fileExt","substring","lastIndexOf","indexOf","toString","concat","handleTextareaChange","ary","String","split","md","this","join","placeholder","rows","onChange","aria-hidden","Button","onClick","Component","BasicTable","rankingData","onItemDelClick","style","maxWidth","columns","field","render","rowData","moment","from","format","customFilterAndSearch","term","type","rmse","id","options","actionsColumnIndex","filtering","editable","onRowDelete","Promise","resolve","reject","setTimeout","tableData","Ranking","ajaxServerItemsLoad","itemList","items","Object","assign","range","Date","loading","ajaxServerItemDelete","deleteItem","handleDelItem","index","newItems","App","path","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.bd0d37ae.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from 'react-router-dom'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport '../../stylesheets/Header.scss';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header-title\">\r\n                <Container>\r\n                    <h1>Error Calculator</h1>\r\n                </Container>\r\n            </div>\r\n            <div className=\"header-nav\">\r\n                <Container>\r\n                    <Nav justify variant=\"pills\" defaultActiveKey=\"/\">\r\n                        <Nav.Item>\r\n                            <Nav.Link eventKey=\"0\" as={NavLink} to=\"/\" exact={true} activeClassName=\"active\">Calculator</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link eventKey=\"1\" as={NavLink} to=\"/ranking\" activeClassName=\"active\" disabled>Ranking</Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                </Container>\r\n            </div>\r\n\r\n            <hr />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Header","import React from \"react\";\r\nimport Container from 'react-bootstrap/Container'\r\nimport '../../stylesheets/Footer.scss';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <Container>\r\n                Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a>\r\n            </Container>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Footer","// ref(參考) https://github.com/nickpoorman/rmse\r\n\r\n\r\n/**\r\n * compute the error\r\n */\r\nconst error = (real, pred) => {\r\n    return pred - real;\r\n}\r\n\r\n/**\r\n * compute the squared error\r\n */\r\nconst squaredError = (real, pred) => {\r\n    var squaredError = [];\r\n    for (var i = real.length - 1; i >= 0; i--) {\r\n        squaredError.push(Math.pow(error(real[i], pred[i]), 2));\r\n    };\r\n    return squaredError;\r\n}\r\n\r\n/**\r\n * compute the absolute percentage error\r\n */\r\nconst absolutePercentageError = (real, pred) => {\r\n    var absolutePercentageError = [];\r\n    for (var i = real.length - 1; i >= 0; i--) {\r\n        absolutePercentageError.push(Math.abs(error(real[i], pred[i]) / real[i]));\r\n    };\r\n    return absolutePercentageError;\r\n}\r\n\r\n/**\r\n * compute the mean\r\n */\r\nconst mean = (val) => {\r\n    var total = 0;\r\n    for (var i = val.length - 1; i >= 0; i--) {\r\n        total += val[i];\r\n    }\r\n    return total / val.length;\r\n}\r\n\r\n/**\r\n * compute the mean square error\r\n */\r\nconst mse = (real, pred) => {\r\n    return mean(squaredError(real, pred));\r\n}\r\n\r\n/**\r\n * compute the root mean squared error\r\n */\r\nexport const RMSE = (real, pred) => {\r\n    return Math.sqrt(mse(real, pred));\r\n}\r\n/**\r\n * compute the n-RMSE\r\n */\r\n export const nRMSE = (real, pred) => {\r\n    return Math.sqrt(mse(real, pred))/mean(real) * 100;\r\n}\r\n/**\r\n * compute the mean absolute percentage error\r\n */\r\nexport const MAPE = (real, pred) => {\r\n    return mean(absolutePercentageError(real, pred)) * 100;\r\n}\r\n","import React from \"react\";\r\n// import CSVReader from \"react-csv-reader\";\r\nimport { CSVReader } from 'react-papaparse'\r\nimport '../../stylesheets/Reader.scss'\r\n\r\nconst papaparseOptions = {\r\n  header: true,\r\n  dynamicTyping: true,\r\n  skipEmptyLines: true,\r\n  transformHeader: header => header.toLowerCase().replace(/\\W/g, \"_\")\r\n};\r\n\r\nconst ForecastReader = ({ handleForce }) => {\r\n  return (\r\n    <div className=\"react-csv\">\r\n      <CSVReader\r\n        onFileLoaded={handleForce}\r\n        parserOptions={papaparseOptions}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default ForecastReader","import React from \"react\";\r\n// Bs components\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Tooltip from 'react-bootstrap/Tooltip'\r\n\r\nconst ClacScore = ({ mape, nrmse }) => {\r\n    return (\r\n        <div>\r\n            <Row className=\"align-items-center rmse\">\r\n                <Col xs={12} className=\"align-items-center score-type \">\r\n                        <Badge pill variant=\"danger\">nRMSE</Badge>\r\n                        <OverlayTrigger overlay={<Tooltip>{nrmse}</Tooltip>} >\r\n                            <span className=\"score-value\">{nrmse.toFixed(2)}%</span>\r\n                        </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"align-items-center mape\">\r\n                <Col xs={12} className=\"score-type\">\r\n                    <Badge pill variant=\"primary\">&nbsp;MAPE&nbsp;</Badge>\r\n                    <OverlayTrigger overlay={<Tooltip>{mape}</Tooltip>}>\r\n                        <span className=\"score-value\">{mape.toFixed(2)}%</span>\r\n                    </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ClacScore","import React from 'react';\r\nimport { Component } from 'react';\r\nimport { readRemoteFile } from 'react-papaparse'\r\nimport moment from 'moment';\r\nimport { MAPE, nRMSE } from '../../lib/Metrics'\r\n// Bs components\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n// view components\r\nimport ForecastReader from './ForecastReader'\r\nimport ClacScore from './ClacScore'\r\nimport '../../stylesheets/Calculator.scss';\r\n\r\nlet ajaxUrl = \"http://localhost:3020/\"\r\n\r\n\r\nclass Calculator extends Component {\r\n    // ---------------------------------------------------\r\n    // 生命週期\r\n    // ---------------------------------------------------\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            isFileUpload: false,\r\n            mape: 0,\r\n            nrmse: 0,\r\n            real: [],\r\n            pred: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    componentDidUpdate() {\r\n    }\r\n\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    ajaxServerItemAdd = (addItem) => {\r\n        //處理payload\r\n        const payload = addItem\r\n\r\n        //作POST\r\n        fetch(ajaxUrl + 'ranking', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(payload)\r\n        })\r\n            .then((response) => {\r\n                //ok 代表狀態碼在範圍 200-299\r\n                if (!response.ok) throw new Error(response.statusText)\r\n                return response.json()\r\n            })\r\n            .then((item) => {\r\n                //這裡可以顯示一些訊息，或是結束指示動畫…\r\n                alert(\"儲存成功\")\r\n\r\n            })\r\n            .catch((error) => {\r\n                //這裡可以顯示一些訊息\r\n                // alert(\"儲存失敗\")\r\n                console.error('error:', error)\r\n            })\r\n    }\r\n\r\n    // ---------------------------------------------------\r\n    // 主程式\r\n    // ---------------------------------------------------\r\n    getRealData = () => {\r\n        const newData = [...this.state.real]\r\n        return newData\r\n    }\r\n\r\n    getPredData = () => {\r\n        const newData = [...this.state.pred]\r\n        return newData\r\n    }\r\n\r\n    dataCleaning = (data) => {\r\n        // 展開運算子, 壓平陣列\r\n        var newData = data.map(function (value) {\r\n            if (value === '') {\r\n                return '-'\r\n            } else if (Number.isNaN(Number(value))) {\r\n                return '-'\r\n            } else {\r\n                return Number(value)\r\n            }\r\n        })\r\n        console.log(newData)\r\n        return newData\r\n    }\r\n\r\n    calculateScore = (e) => {\r\n\r\n        e.preventDefault()\r\n\r\n        const real = this.dataCleaning(this.getRealData())\r\n        const pred = this.dataCleaning(this.getPredData())\r\n\r\n        if (real.length !== pred.length) {\r\n            alert('資料長度不同')\r\n            return\r\n        }\r\n\r\n        let newReal = [...real]\r\n        let newPred = [...pred]\r\n\r\n        let i = 0;\r\n        while (i < newReal.length) {\r\n            if (newReal[i] === '-') {\r\n                newReal.splice(i, 1)\r\n                newPred.splice(i, 1)\r\n            } else if (newPred[i] === '-') {\r\n                newReal.splice(i, 1)\r\n                newPred.splice(i, 1)\r\n            } else {\r\n                i++\r\n            }\r\n        }\r\n\r\n        let nrmse = nRMSE(newReal, newPred)\r\n        let mape = MAPE(newReal, newPred)\r\n\r\n        this.setState({\r\n            real: real,\r\n            pred: pred,\r\n            isFileUpload: true,\r\n            nrmse: nrmse,\r\n            mape: mape,\r\n        })\r\n    }\r\n\r\n    applyData = (target, data) => {\r\n        if (target === 'pred') {\r\n            this.setState({\r\n                pred: data,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                real: data,\r\n            })\r\n        }\r\n    }\r\n\r\n    // ---------------------------------------------------\r\n    // handle action\r\n    // ---------------------------------------------------\r\n\r\n    handleForce = (target, data, fileName) => {\r\n        // 檢查附檔名，若不符合則判斷上傳失敗\r\n        const validExts = [\".xlsx\", \".xls\", \".csv\"]\r\n        const fileExt = fileName.substring(fileName.lastIndexOf('.'))\r\n        if (validExts.indexOf(fileExt) < 0) {\r\n            alert(\"檔案類型錯誤，可接受的副檔名有：\" + validExts.toString())\r\n            return\r\n        }\r\n\r\n        // 清洗 csv\r\n        let newData = [].concat(...data.data)\r\n        // let ary = [].concat(...newData)\r\n        isNaN(newData[0]) && newData.splice(0, 1)\r\n\r\n        this.applyData(target, newData)\r\n    }\r\n\r\n    handleTextareaChange = (target, e) => {\r\n\r\n        let ary = String(e.target.value).split('\\n')\r\n        if (target === 'pred') {\r\n            this.setState({ pred: ary })\r\n        } else {\r\n            this.setState({ real: ary })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Calculator\">\r\n                <Row>\r\n                    <Col xs={12} md={6}>\r\n                        <Row className=\"align-items-center calculator-textarea\">\r\n                            <Col xs={12} className=\"row-title\">\r\n                                <h2>Real Answer</h2>\r\n                                <span>Enter some numbers or upload a CSV file with data</span>\r\n                            </Col>\r\n                            <Col xs={12} className=\"row-textarea\">\r\n                                <textarea value={this.state.real.join('\\n')} placeholder='Please enter some numbers, separated by line breaks.' className=\"form-control\" rows={10} onChange={(e) => this.handleTextareaChange('real', e)} />\r\n                                {/* <br /> */}\r\n                                <Badge pill variant=\"primary\">\r\n                                    {this.state.real.length} Data Points\r\n                                </Badge>\r\n                            </Col>\r\n                            <Col xs={12} className=\"calculator-csv-reader\">\r\n                                <ForecastReader handleForce={(...e) => this.handleForce('real', ...e)} />\r\n                                {/* <br /> */}\r\n                                <Badge pill variant=\"secondary\">\r\n                                    <a href='https://raw.githubusercontent.com/Chang-Siang/onlinecalcerror/master/public/Data/Template(Real).csv' target='_blank'>\r\n                                        <span className=\"glyphicon glyphicon-download-alt\" aria-hidden=\"true\"></span>\r\n                                        File format template\r\n                                    </a>\r\n                                </Badge>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col xs={12} md={6}>\r\n                        <Row className=\"align-items-center calculator-textarea\">\r\n                            <Col xs={12} className=\"row-title\">\r\n                                <h2>Predictive Value</h2>\r\n                                <span>Enter some numbers or upload a CSV file with data</span>\r\n                            </Col>\r\n                            <Col xs={12} className=\"row-textarea\">\r\n                                <textarea value={this.state.pred.join('\\n')} placeholder='Please enter some numbers, separated by line breaks.' className=\"form-control\" rows='10' onChange={(e) => this.handleTextareaChange('pred', e)} />\r\n                                {/* <br /> */}\r\n                                <Badge pill variant=\"primary\">\r\n                                    {this.state.pred.length} Data Points\r\n                                </Badge>\r\n                            </Col>\r\n                            <Col xs={12} className=\"calculator-csv-reader\">\r\n                                <ForecastReader handleForce={(...e) => this.handleForce('pred', ...e)} />\r\n                                {/* <br /> */}\r\n                                <Badge pill variant=\"secondary\">\r\n                                    <a href='https://raw.githubusercontent.com/Chang-Siang/onlinecalcerror/master/public/Data/Template(Pred).csv' target='_blank'>\r\n                                        <span className=\"glyphicon glyphicon-download-alt\" aria-hidden=\"true\"></span>\r\n                                        File format template\r\n                                    </a>\r\n                                </Badge>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n                <hr />\r\n                <Row className=\"align-items-center\">\r\n                    <Col xs={12} className=\"row-title\">\r\n                        <Button variant=\"btn btn-outline-primary btn-lg btn-block\" onClick={this.calculateScore}>\r\n                            Calculate\r\n                        </Button>\r\n                        {/* <ClacScore rmse={this.state.rmse} mape={this.state.mape} /> */}\r\n                    </Col>\r\n                </Row>\r\n                <hr />\r\n                <Row className=\"align-items-center calculator-score\">\r\n                    <Col xs={12}>\r\n                        <ClacScore nrmse={this.state.nrmse} mape={this.state.mape} />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Calculator","import React from \"react\";\r\nimport moment from 'moment';\r\nimport MaterialTable from 'material-table'\r\n\r\n\r\nconst BasicTable = ({ rankingData, onItemDelClick }) => {\r\n    return (\r\n        <div style={{ maxWidth: '100%' }}>\r\n            <MaterialTable\r\n                title=\"Ranking\"\r\n                columns={[\r\n                    { title: '上傳者', field: 'name' },\r\n                    {\r\n                        title: '預測範圍',\r\n                        field: 'range',\r\n                        render: rowData => <div>[{moment(rowData.from).format('YYYY-MM-DD')}] - [{moment(rowData.to).format('YYYY-MM-DD')}]</div>,\r\n                        customFilterAndSearch: (term, rowData) => moment(rowData.from).format('YYYY-MM-DD').indexOf(term) !== -1 || moment(rowData.to).format('YYYY-MM-DD').indexOf(term) !== -1\r\n                    },\r\n                    {\r\n                        title: 'RMSE',\r\n                        field: 'rmse',\r\n                        type: 'numeric',\r\n                        render: rowData => <div>{rowData.rmse.toFixed(6)}</div>\r\n                    },\r\n                    {\r\n                        title: 'MAPE',\r\n                        field: 'mape',\r\n                        type: 'numeric',\r\n                        render: rowData => <div>{rowData.mape.toFixed(6)}</div>\r\n                    },\r\n                    {\r\n                        title: '上傳時間',\r\n                        field: 'id',\r\n                        render: rowData => <div>{moment(rowData.id).format('YYYY-MM-DD HH:mm')}</div>,\r\n                        customFilterAndSearch: (term, rowData) => moment(rowData.id).format('YYYY-MM-DD HH:mm').indexOf(term) !== -1\r\n                    },\r\n                    // { title: 'Doğum Yeri', field: 'birthCity', lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' } }\r\n                ]}\r\n                data={rankingData}\r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    filtering: true\r\n                }}\r\n                editable={{\r\n                    onRowDelete: rowData =>\r\n                        new Promise((resolve, reject) => {\r\n                            setTimeout(() => {\r\n                                {\r\n                                    onItemDelClick(rowData.tableData.id)\r\n                                }\r\n                                resolve()\r\n                            }, 1000)\r\n                        }),\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BasicTable","import React from \"react\";\r\nimport { Component } from 'react';\r\nimport BasicTable from \"./BasicTable\"\r\n\r\nlet ajaxUrl = \"http://localhost:3020/\"\r\n\r\n\r\n\r\nclass Ranking extends Component {\r\n    //建構式\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            items: [],\r\n            loading: false,\r\n            error: false\r\n        }\r\n    }\r\n\r\n    // 元件狀態\r\n    componentWillMount() {\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.setState({\r\n            loading: true\r\n        })\r\n\r\n        // 元件\"已經\"載入，所以可以載入資料進來\r\n        this.ajaxServerItemsLoad()\r\n    }\r\n\r\n\r\n    // Ajax\r\n    ajaxServerItemsLoad = () => {\r\n        fetch(ajaxUrl + 'ranking', {\r\n            method: 'GET'\r\n        })\r\n            .then((response) => {\r\n                //ok 代表狀態碼在範圍 200-299\r\n                if (!response.ok) throw new Error(response.statusText)\r\n                return response.json()\r\n            })\r\n            .then((itemList) => {\r\n\r\n                //加入{ isEditing: false }屬性\r\n                const items = itemList.map((item) => {\r\n                    return Object.assign({}, item, { range: new Date(item.to) - new Date(item.from) })\r\n                })\r\n                console.log('items :', items);\r\n                //載入資料，重新渲染\r\n                this.setState({\r\n                    items: items,\r\n                    loading: false\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                //這裡可以顯示一些訊息\r\n                console.error(error)\r\n                this.setState({\r\n                    loading: false,\r\n                    error: true\r\n                })\r\n            })\r\n    }\r\n\r\n    ajaxServerItemDelete = (deleteItem) => {\r\n        //處理payload，不需要isEditing欄位\r\n        const { id } = deleteItem\r\n\r\n        //作POST\r\n        fetch(ajaxUrl + `ranking/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then((response) => {\r\n                //ok 代表狀態碼在範圍 200-299\r\n                if (!response.ok) throw new Error(response.statusText)\r\n                return response.json()\r\n            })\r\n            .then((item) => {\r\n                //這裡可以顯示一些訊息，或是結束指示動畫…\r\n                console.log('item:', item)\r\n            })\r\n            .catch((error) => {\r\n                console.error('error:', error)\r\n            })\r\n    }\r\n\r\n    handleDelItem = index => {\r\n        //拷貝一個新陣列\r\n        const newItems = [...this.state.items]\r\n\r\n        // 呼叫 Ajax 刪除資料\r\n        this.ajaxServerItemDelete(newItems[index])\r\n\r\n        newItems.splice(index, 1)\r\n\r\n        //整個陣列重新更新\r\n        this.setState({\r\n            items: newItems,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <BasicTable rankingData={this.state.items} onItemDelClick={this.handleDelItem} />\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Ranking","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport Header from './Header'\r\nimport Footer from './Footer'\r\nimport Calculator from './Calculator'\r\nimport Ranking from './Ranking'\r\n\r\n// import logo from '../logo.svg';\r\n// import '../stylesheets/App.scss'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'glyphicons-only-bootstrap/css/bootstrap.min.css';\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"main\">\r\n        <Header />\r\n        <Container>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Calculator} />\r\n            <Route path=\"/ranking\" component={Ranking} />\r\n          </Switch>\r\n        </Container>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom'\r\nimport './stylesheets/index.scss';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <App />\r\n    </HashRouter>,\r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}