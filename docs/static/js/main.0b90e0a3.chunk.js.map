{"version":3,"sources":["components/Header/Header.jsx","components/Footer/Footer.jsx","lib/Metrics.js","components/Calculator/DatePick.jsx","components/Calculator/ForecastReader.jsx","components/Calculator/ClacScore.jsx","components/Calculator/CalcSaveResult.jsx","components/Calculator/Calculator.jsx","components/Ranking/BasicTable.jsx","components/Ranking/Ranking.jsx","components/App.js","serviceWorker.js","index.js"],"names":["Header","className","Container","Nav","justify","variant","defaultActiveKey","Item","Link","eventKey","as","NavLink","to","exact","activeClassName","Footer","href","title","error","real","pred","mean","val","total","i","length","mse","squaredError","push","Math","pow","MAPE","absolutePercentageError","abs","MONTHS","defFrom","defTo","DatePick","from","handleFromChange","handleToChange","console","log","initDefDate","modifiers","start","end","value","placeholder","formatDate","parseDate","dayPickerProps","selectedDays","months","enableOutsideDays","numberOfMonths","fromMonth","toMonth","disabledDays","before","after","onDayClick","getInput","focus","onDayChange","ref","el","month","papaparseOptions","header","dynamicTyping","skipEmptyLines","transformHeader","toLowerCase","replace","ForecastReader","handleForce","onFileLoaded","parserOptions","ClacScore","mape","rmse","Row","Col","xs","Badge","pill","OverlayTrigger","overlay","Tooltip","toFixed","CalcSaveResult","username","handleChange","handleISaveResult","useState","validated","setValidated","Form","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","Group","md","controlId","InputGroup","Control","type","aria-describedby","onChange","required","Append","Button","Feedback","Calculator","loadOriginData","readRemoteFile","download","complete","results","Date","data","date","setState","originData","ajaxServerItemAdd","addItem","payload","fetch","ajaxUrl","method","headers","body","JSON","stringify","then","response","ok","Error","statusText","json","item","alert","catch","getOriginData","state","filter","column","map","kW","forecastDataCleaning","newData","concat","isNaN","splice","dataCheck","forecastData","calculateScore","sqrt","isFileUpload","temp","valueOf","getFullYear","getMonth","getDate","fileName","validExts","fileExt","substring","lastIndexOf","indexOf","toString","target","saveItem","id","name","this","moment","diff","getDayPicker","showMonth","aria-hidden","Component","BasicTable","rankingData","onItemDelClick","style","maxWidth","columns","field","render","rowData","format","customFilterAndSearch","term","options","actionsColumnIndex","filtering","editable","onRowDelete","Promise","resolve","reject","setTimeout","tableData","Ranking","ajaxServerItemsLoad","itemList","items","Object","assign","range","loading","ajaxServerItemDelete","deleteItem","handleDelItem","index","newItems","App","path","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"8ZAkCeA,G,OA5BA,WACX,OACI,yBAAKC,UAAU,UACX,yBAAKA,UAAU,gBACX,kBAACC,EAAA,EAAD,KACI,kDAGR,yBAAKD,UAAU,cACX,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,SAAO,EAACC,QAAQ,QAAQC,iBAAiB,KAC1C,kBAACH,EAAA,EAAII,KAAL,KACI,kBAACJ,EAAA,EAAIK,KAAL,CAAUC,SAAS,IAAIC,GAAIC,IAASC,GAAG,IAAIC,OAAO,EAAMC,gBAAgB,UAAxE,eAEJ,kBAACX,EAAA,EAAII,KAAL,KACI,kBAACJ,EAAA,EAAIK,KAAL,CAAUC,SAAS,IAAIC,GAAIC,IAASC,GAAG,WAAWE,gBAAgB,UAAlE,eAMhB,gCCXGC,G,OAZA,WACX,OACI,yBAAKd,UAAU,UACX,kBAACC,EAAA,EAAD,sBACkB,uBAAGc,KAAK,2CAA2CC,MAAM,WAAzD,WADlB,SACsG,uBAAGD,KAAK,4BAA4BC,MAAM,YAA1C,yB,0ECF5GC,EAAQ,SAACC,EAAMC,GACjB,OAAOA,EAAOD,GA4BZE,EAAO,SAACC,GAEV,IADA,IAAIC,EAAQ,EACHC,EAAIF,EAAIG,OAAS,EAAGD,GAAK,EAAGA,IACjCD,GAASD,EAAIE,GAEjB,OAAOD,EAAQD,EAAIG,QAMjBC,EAAM,SAACP,EAAMC,GACf,OAAOC,EAlCU,SAACF,EAAMC,GAExB,IADA,IAAIO,EAAe,GACVH,EAAIL,EAAKM,OAAS,EAAGD,GAAK,EAAGA,IAClCG,EAAaC,KAAKC,KAAKC,IAAIZ,EAAMC,EAAKK,GAAIJ,EAAKI,IAAK,IAExD,OAAOG,EA6BKA,CAAaR,EAAMC,KAatBW,EAAO,SAACZ,EAAMC,GACvB,OAAmD,IAA5CC,EArCqB,SAACF,EAAMC,GAEnC,IADA,IAAIY,EAA0B,GACrBR,EAAIL,EAAKM,OAAS,EAAGD,GAAK,EAAGA,IAClCQ,EAAwBJ,KAAKC,KAAKI,IAAIf,EAAMC,EAAKK,GAAIJ,EAAKI,IAAML,EAAKK,KAEzE,OAAOQ,EAgCKA,CAAwBb,EAAMC,K,qDCtDxCc,G,cAAS,CACX,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,WACA,aAIAC,EAAU,KACVC,EAAQ,KA2EGC,EAjEE,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,KAAM1B,EAA2C,EAA3CA,GAAI2B,EAAuC,EAAvCA,iBAAkBC,EAAqB,EAArBA,gBAR5B,SAACF,EAAM1B,GACP,OAAZuB,GAA6B,KAATG,IACpBG,QAAQC,IAAI,SAAUJ,GACtBH,EAAUG,EACVF,EAAQxB,GAKZ+B,CAAYL,EAAM1B,GAClB,IAAMgC,EAAY,CAAEC,MAAOP,EAAMQ,IAAKlC,GACtC,OACI,6BACI,yBAAKX,UAAU,eACX,kBAAC,IAAD,CACI8C,MAAOT,EACPU,YAAY,OACZC,WAAYA,aACZC,UAAWA,YACXC,eAAgB,CAEZP,YACAQ,aAAc,CAACd,EAAM,CAAEA,OAAM1B,OAE7ByC,OAAQnB,EACRoB,mBAAmB,EACnBC,eAAgB,EAEhBC,UAAWrB,EACXsB,QAAS7C,EACT8C,aAAc,CACVC,OAAQxB,EACRyB,MAAOhD,GAGXiD,WAAY,kBAAMjD,EAAGkD,WAAWC,UAEpCC,YAAazB,IAEjB,0CACA,0BAAMtC,UAAU,kBACZ,kBAAC,IAAD,CACIgE,IAAK,SAAAC,GAAE,OAAKtD,EAAKsD,GACjBnB,MAAOnC,EACPoC,YAAY,KACZC,WAAYA,aACZC,UAAWA,YACXC,eAAgB,CAEZgB,MAAO7B,EACPM,YACAQ,aAAc,CAACd,EAAM,CAAEA,OAAM1B,OAE7ByC,OAAQnB,EACRoB,mBAAmB,EACnBC,eAAgB,EAEhBC,UAAWlB,EACXmB,QAASrB,EACTsB,aAAc,CACVC,OAAQrB,EACRsB,MAAOxB,IAGf4B,YAAaxB,QCrF/B4B,G,OAAmB,CACvBC,QAAQ,EACRC,eAAe,EACfC,gBAAgB,EAChBC,gBAAiB,SAAAH,GAAM,OAAIA,EAAOI,cAAcC,QAAQ,MAAO,QAelDC,EAZQ,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACxB,OACE,yBAAK3E,UAAU,aACb,kBAAC,IAAD,CACE4E,aAAcD,EACdE,cAAeV,M,kBCmBRW,EA5BG,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACvB,OACI,6BACI,kBAACC,EAAA,EAAD,CAAKjF,UAAU,2BACX,kBAACkF,EAAA,EAAD,CAAKC,GAAI,EAAGnF,UAAU,cAClB,kBAACoF,EAAA,EAAD,CAAOC,MAAI,EAACjF,QAAQ,UAApB,SAEJ,kBAAC8E,EAAA,EAAD,CAAKC,GAAI,EAAGnF,UAAU,eAClB,kBAACsF,EAAA,EAAD,CAAgBC,QAAS,kBAACC,EAAA,EAAD,KAAUR,IAC/B,8BAAOA,EAAKS,QAAQ,OAIhC,kBAACR,EAAA,EAAD,CAAKjF,UAAU,2BACX,kBAACkF,EAAA,EAAD,CAAKC,GAAI,EAAGnF,UAAU,cAClB,kBAACoF,EAAA,EAAD,CAAOC,MAAI,EAACjF,QAAQ,WAApB,SAEJ,kBAAC8E,EAAA,EAAD,CAAKC,GAAI,EAAGnF,UAAU,eAClB,kBAACsF,EAAA,EAAD,CAAgBC,QAAS,kBAACC,EAAA,EAAD,KAAUT,IAC/B,8BAAOA,EAAKU,QAAQ,S,mCCoB7BC,EAzCQ,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,SAAUC,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,kBAAwB,EACpCC,oBAAS,GAD2B,mBAC/DC,EAD+D,KACpDC,EADoD,KAetE,OACI,kBAACC,EAAA,EAAD,CAAMC,YAAU,EAACH,UAAWA,EAAWI,SAdtB,SAAAC,IAEY,IADhBA,EAAMC,cACVC,iBAELF,EAAMG,iBACNH,EAAMI,mBAGNX,IAEJG,GAAa,KAKT,kBAACC,EAAA,EAAKhB,IAAN,KACI,kBAACgB,EAAA,EAAKQ,MAAN,CAAYhG,GAAIyE,IAAKC,GAAG,KAAKuB,GAAG,IAAIC,UAAU,4BAC1C,kBAACC,EAAA,EAAD,KACI,kBAACX,EAAA,EAAKY,QAAN,CACIC,KAAK,OACL/D,YAAY,mBACZgE,mBAAiB,oBACjBjE,MAAO6C,EACPqB,SAAUpB,EACVqB,UAAQ,IAEZ,kBAACL,EAAA,EAAWM,OAAZ,KACI,kBAACC,EAAA,EAAD,CAAQL,KAAK,SAAS1G,QAAQ,mBAA9B,gBAEJ,kBAAC6F,EAAA,EAAKY,QAAQO,SAAd,CAAuBN,KAAK,WAA5B,gCCjBpB5E,G,OAAU,IACVC,EAAQ,GAsQGkF,E,YAhQX,aAAe,IAAD,8BACV,+CA0BJC,eAAiB,WACbC,YAAe,yHAA0H,CACrIC,UAAU,EACVpD,QAAQ,EACRqD,SAAU,SAACC,GACPxF,EAAU,IAAIyF,KAAKD,EAAQE,KAAK,GAAGC,MACnC1F,EAAQ,IAAIwF,KAAKD,EAAQE,KAAMF,EAAQE,KAAMpG,OAAS,GAAGqG,MACzD,EAAKC,SAAS,CACVC,WAAYL,EAAQE,KACpBvF,KAAMH,EACNvB,GAAIwB,QArCN,EA2Cd6F,kBAAoB,SAACC,GAEjB,IAAMC,EAAUD,EAGhBE,MAAMC,gCAAqB,CACvBC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUP,KAEpBQ,MAAK,SAACC,GAEH,IAAKA,EAASC,GAAI,MAAM,IAAIC,MAAMF,EAASG,YAC3C,OAAOH,EAASI,UAEnBL,MAAK,SAACM,GAEHC,MAAM,+BAGTC,OAAM,SAACjI,GAGJuB,QAAQvB,MAAM,SAAUA,OApEtB,EA2EdkI,cAAgB,WAIZ,OAHa,YAAO,EAAKC,MAAMrB,YAI1BsB,QAAO,SAACC,GAAD,OACJ,EAAKF,MAAM/G,MAAS,IAAIsF,KAAK2B,EAAOzB,OAAW,IAAIF,KAAK2B,EAAOzB,OAAU,EAAKuB,MAAMzI,MAEvF4I,KAAI,SAACD,GAAD,OACDA,EAAOE,OApFL,EAwFdC,qBAAuB,SAAC7B,GAAU,IAAD,EAEzB8B,GAAU,MAAGC,OAAH,oBAAa/B,IAI3B,OAHAgC,MAAMF,EAAQ,KAAOA,EAAQG,OAAO,EAAG,GAGhCH,EACFL,QAAO,SAACL,GAAD,OACJA,MAhGE,EAoGdc,UAAY,SAACC,GACT,IAAIhC,EAAa,EAAKoB,gBAIlBpB,EAAWvG,SAAWuI,EAAavI,OAKvC,EAAKwI,eAAejC,EAAYgC,GAJ5Bd,MAAM,qDA1GA,EAiHde,eAAiB,SAACjC,EAAYgC,GAC1B,ILxFa7I,EAAMC,EKwFf6D,GLxFS9D,EKwFG6G,ELxFG5G,EKwFS4I,ELvFzBnI,KAAKqI,KAAKxI,EAAIP,EAAMC,KKwFnB4D,EAAOjD,EAAKiG,EAAYgC,GAE5B,EAAKjC,SAAS,CACVoC,cAAc,EACdlF,KAAMA,EACND,KAAMA,KAxHA,EA+HdzC,iBAAmB,SAACD,GAEhB,IAAM8H,EAAO,IAAIxC,KAAKtF,GAEjBuH,MAAMO,EAAKC,aACZ/H,EAAO,IAAIsF,KAAKtF,EAAKgI,cAAehI,EAAKiI,WAAYjI,EAAKkI,UAAW,EAAG,EAAG,GACvErI,EAAUG,IACV4G,MAAM,iBACN5G,EAAOH,IAIf,EAAK4F,SAAS,CACVzF,UA5IM,EAgJdE,eAAiB,SAAC5B,GAEd,IAAMwJ,EAAO,IAAIxC,KAAKhH,GAEjBiJ,MAAMO,EAAKC,aACZzJ,EAAK,IAAIgH,KAAKhH,EAAG0J,cAAe1J,EAAG2J,WAAY3J,EAAG4J,UAAW,EAAG,EAAG,GAC/DpI,EAAQxB,IACRA,EAAKwB,EACL8G,MAAM,mBAId,EAAKnB,SAAS,CACVnH,QA7JM,EA4KdgE,YAAc,SAACiD,EAAM4C,GAEjB,IAAMC,EAAY,CAAC,QAAS,OAAQ,QAC9BC,EAAUF,EAASG,UAAUH,EAASI,YAAY,MACxD,GAAIH,EAAUI,QAAQH,GAAW,EAC7BzB,MAAM,mGAAqBwB,EAAUK,gBADzC,CAKA,IAAIf,EAAe,EAAKN,qBAAqB7B,EAAKA,MAElD,EAAKkC,UAAUC,KAvLL,EA0LdnE,aAAe,SAACQ,GACZ,EAAK0B,SAAS,CAAEnC,SAAUS,EAAM2E,OAAOjI,SA3L7B,EA8Ld+C,kBAAoB,WAChB,IAAMmF,EAAW,CACbC,IAAK,IAAItD,KACTuD,KAAM,EAAK9B,MAAMzD,SACjBtD,KAAM,EAAK+G,MAAM/G,KACjB1B,GAAI,EAAKyI,MAAMzI,GACfoE,KAAM,EAAKqE,MAAMrE,KACjBC,KAAM,EAAKoE,MAAMpE,MAEjB,EAAKoE,MAAMc,cAEX,EAAKlC,kBAAkBgD,GACvB,EAAKlD,SAAS,CAAEoC,cAAc,KAE9BjB,MAAM,+CAzMV,EAAKG,MAAQ,CACTc,cAAc,EACdnC,WAAY,GACZpC,SAAU,GACVtD,KAAM,GACN1B,GAAI,GACJoE,KAAM,EACNC,KAAM,GAVA,E,iFAeVxC,QAAQC,IAAI,uBACZ0I,KAAK7D,mB,2CAIL9E,QAAQC,IAAI,0B,6CAIZD,QAAQC,IAAI,4B,sCA0IC,IAAD,EACS0I,KAAK/B,MAAlB/G,EADI,EACJA,KAAM1B,EADF,EACEA,GACT0B,GAGD+I,IAAOzK,GAAI0K,KAAKD,IAAO/I,GAAO,UAAY,GAC1C8I,KAAKxK,GAAG2K,eAAeC,UAAUlJ,K,+BAyCrC,OACI,yBAAKrC,UAAU,cACX,kBAACiF,EAAA,EAAD,CAAKjF,UAAU,4CACX,kBAACkF,EAAA,EAAD,CAAKC,GAAI,GAAIuB,GAAI,EAAG1G,UAAU,aAC1B,oDAEJ,kBAACkF,EAAA,EAAD,CAAKC,GAAI,GAAIuB,GAAI,GACb,kBAAC,EAAD,CACIrE,KAAM8I,KAAK/B,MAAM/G,KACjB1B,GAAIwK,KAAK/B,MAAMzI,GACf2B,iBAAkB6I,KAAK7I,iBACvBC,eAAgB4I,KAAK5I,iBAEzB,kBAAC6C,EAAA,EAAD,CAAOC,MAAI,EAACjF,QAAQ,YACd+K,KAAK/B,MAAMzI,GAAKwK,KAAK/B,MAAM/G,MAA5B,MAAyD,EAD9D,WAKR,6BACA,kBAAC4C,EAAA,EAAD,CAAKjF,UAAU,4CACX,kBAACkF,EAAA,EAAD,CAAKC,GAAI,GAAIuB,GAAI,EAAG1G,UAAU,aAC1B,gDAEJ,kBAACkF,EAAA,EAAD,CAAKC,GAAI,GAAIuB,GAAI,GACb,kBAAC,EAAD,CAAgB/B,YAAawG,KAAKxG,cAClC,kBAACS,EAAA,EAAD,CAAOC,MAAI,EAACjF,QAAQ,aAChB,uBAAGW,KAAK,6GACJ,0BAAMf,UAAU,mCAAmCwL,cAAY,SADnE,2BAOZ,6BACA,kBAACvG,EAAA,EAAD,CAAKjF,UAAU,uCACX,kBAACkF,EAAA,EAAD,CAAKC,GAAI,GAAIuB,GAAI,EAAG1G,UAAU,aAC1B,kBAAC,EAAD,CAAWgF,KAAMmG,KAAK/B,MAAMpE,KAAMD,KAAMoG,KAAK/B,MAAMrE,QAEvD,kBAACG,EAAA,EAAD,CAAKC,GAAI,GAAIuB,GAAI,GACb,kBAAC,EAAD,CAAgBf,SAAUwF,KAAK/B,MAAMzD,SAAUC,aAAcuF,KAAKvF,aAAcC,kBAAmBsF,KAAKtF,2B,GA5PvG4F,a,kBCoCVC,EAtDI,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eAC/B,OACI,yBAAKC,MAAO,CAAEC,SAAU,SACpB,kBAAC,IAAD,CACI9K,MAAM,UACN+K,QAAS,CACL,CAAE/K,MAAO,qBAAOgL,MAAO,QACvB,CACIhL,MAAO,2BACPgL,MAAO,QACPC,OAAQ,SAAAC,GAAO,OAAI,iCAAOd,IAAOc,EAAQ7J,MAAM8J,OAAO,cAAnC,QAAuDf,IAAOc,EAAQvL,IAAIwL,OAAO,cAAjF,MACnBC,sBAAuB,SAACC,EAAMH,GAAP,OAAgF,IAA7Dd,IAAOc,EAAQ7J,MAAM8J,OAAO,cAActB,QAAQwB,KAA2E,IAA3DjB,IAAOc,EAAQvL,IAAIwL,OAAO,cAActB,QAAQwB,KAEhK,CACIrL,MAAO,OACPgL,MAAO,OACPlF,KAAM,UACNmF,OAAQ,SAAAC,GAAO,OAAI,6BAAMA,EAAQlH,KAAKS,QAAQ,MAElD,CACIzE,MAAO,OACPgL,MAAO,OACPlF,KAAM,UACNmF,OAAQ,SAAAC,GAAO,OAAI,6BAAMA,EAAQnH,KAAKU,QAAQ,MAElD,CACIzE,MAAO,2BACPgL,MAAO,KACPC,OAAQ,SAAAC,GAAO,OAAI,6BAAMd,IAAOc,EAAQjB,IAAIkB,OAAO,sBACnDC,sBAAuB,SAACC,EAAMH,GAAP,OAAoF,IAAjEd,IAAOc,EAAQjB,IAAIkB,OAAO,oBAAoBtB,QAAQwB,MAIxGzE,KAAM+D,EACNW,QAAS,CACLC,oBAAqB,EACrBC,WAAW,GAEfC,SAAU,CACNC,YAAa,SAAAR,GAAO,OAChB,IAAIS,SAAQ,SAACC,EAASC,GAClBC,YAAW,WAEHlB,EAAeM,EAAQa,UAAU9B,IAErC2B,MACD,cCkEhBI,E,YA3GX,aAAe,IAAD,8BACV,+CAwBJC,oBAAsB,WAClB9E,MAAMC,gCAAqB,CACvBC,OAAQ,QAEPK,MAAK,SAACC,GAEH,IAAKA,EAASC,GAAI,MAAM,IAAIC,MAAMF,EAASG,YAC3C,OAAOH,EAASI,UAEnBL,MAAK,SAACwE,GAGH,IAAMC,EAAQD,EAAS3D,KAAI,SAACP,GACxB,OAAOoE,OAAOC,OAAO,GAAIrE,EAAM,CAAEsE,MAAO,IAAI3F,KAAKqB,EAAKrI,IAAM,IAAIgH,KAAKqB,EAAK3G,WAE9EG,QAAQC,IAAI,UAAW0K,GAEvB,EAAKrF,SAAS,CACVqF,MAAOA,EACPI,SAAS,OAGhBrE,OAAM,SAACjI,GAEJuB,QAAQvB,MAAMA,GACd,EAAK6G,SAAS,CACVyF,SAAS,EACTtM,OAAO,QApDT,EAyDduM,qBAAuB,SAACC,GAAe,IAE3BxC,EAAOwC,EAAPxC,GAGR9C,MApEM,yBAoEO,kBAAc8C,GAAM,CAC7B5C,OAAQ,SACRC,QAAS,CACL,eAAgB,sBAGnBI,MAAK,SAACC,GAEH,IAAKA,EAASC,GAAI,MAAM,IAAIC,MAAMF,EAASG,YAC3C,OAAOH,EAASI,UAEnBL,MAAK,SAACM,GAEHxG,QAAQC,IAAI,QAASuG,MAExBE,OAAM,SAACjI,GACJuB,QAAQvB,MAAM,SAAUA,OA9EtB,EAkFdyM,cAAgB,SAAAC,GAEZ,IAAMC,EAAQ,YAAO,EAAKxE,MAAM+D,OAGhC,EAAKK,qBAAqBI,EAASD,IAEnCC,EAAS/D,OAAO8D,EAAO,GAGvB,EAAK7F,SAAS,CACVqF,MAAOS,KA3FX,EAAKxE,MAAQ,CACT+D,MAAO,GACPI,SAAS,EACTtM,OAAO,GALD,E,+HAeVkK,KAAKrD,SAAS,CACVyF,SAAS,IAIbpC,KAAK8B,wB,+BA8EL,OACI,6BACI,kBAAC,EAAD,CAAYtB,YAAaR,KAAK/B,MAAM+D,MAAOvB,eAAgBT,KAAKuC,qB,GAtG1DjC,a,cCsBPoC,MAjBf,WACE,OACE,yBAAK7N,UAAU,OACb,yBAAKA,UAAU,QACb,kBAAC,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOW,OAAK,EAACkN,KAAK,IAAIC,UAAW1G,IACjC,kBAAC,IAAD,CAAOyG,KAAK,WAAWC,UAAWf,OAIxC,kBAAC,EAAD,QCbcgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASpC,OACL,kBAAC,IAAD,KACI,kBAAC,EAAD,OAEJqC,SAASC,eAAe,SDwHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhG,MAAK,SAAAiG,GACJA,EAAaC,gBAEd1F,OAAM,SAAAjI,GACLuB,QAAQvB,MAAMA,EAAM4N,c","file":"static/js/main.0b90e0a3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from 'react-router-dom'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport '../../stylesheets/Header.scss';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header-title\">\r\n                <Container>\r\n                    <h1>Error Calculator</h1>\r\n                </Container>\r\n            </div>\r\n            <div className=\"header-nav\">\r\n                <Container>\r\n                    <Nav justify variant=\"pills\" defaultActiveKey=\"/\">\r\n                        <Nav.Item>\r\n                            <Nav.Link eventKey=\"0\" as={NavLink} to=\"/\" exact={true} activeClassName=\"active\">Calculator</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link eventKey=\"1\" as={NavLink} to=\"/ranking\" activeClassName=\"active\">Ranking</Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                </Container>\r\n            </div>\r\n\r\n            <hr />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Header","import React from \"react\";\r\nimport Container from 'react-bootstrap/Container'\r\nimport '../../stylesheets/Footer.scss';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <Container>\r\n                Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a>\r\n            </Container>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Footer","// ref(參考) https://github.com/nickpoorman/rmse\r\n\r\n\r\n/**\r\n * compute the error\r\n */\r\nconst error = (real, pred) => {\r\n    return pred - real;\r\n}\r\n\r\n/**\r\n * compute the squared error\r\n */\r\nconst squaredError = (real, pred) => {\r\n    var squaredError = [];\r\n    for (var i = real.length - 1; i >= 0; i--) {\r\n        squaredError.push(Math.pow(error(real[i], pred[i]), 2));\r\n    };\r\n    return squaredError;\r\n}\r\n\r\n/**\r\n * compute the absolute percentage error\r\n */\r\nconst absolutePercentageError = (real, pred) => {\r\n    var absolutePercentageError = [];\r\n    for (var i = real.length - 1; i >= 0; i--) {\r\n        absolutePercentageError.push(Math.abs(error(real[i], pred[i]) / real[i]));\r\n    };\r\n    return absolutePercentageError;\r\n}\r\n\r\n/**\r\n * compute the mean\r\n */\r\nconst mean = (val) => {\r\n    var total = 0;\r\n    for (var i = val.length - 1; i >= 0; i--) {\r\n        total += val[i];\r\n    }\r\n    return total / val.length;\r\n}\r\n\r\n/**\r\n * compute the mean square error\r\n */\r\nconst mse = (real, pred) => {\r\n    return mean(squaredError(real, pred));\r\n}\r\n\r\n/**\r\n * compute the root mean squared error\r\n */\r\nexport const RMSE = (real, pred) => {\r\n    return Math.sqrt(mse(real, pred));\r\n}\r\n\r\n/**\r\n * compute the mean absolute percentage error\r\n */\r\nexport const MAPE = (real, pred) => {\r\n    return mean(absolutePercentageError(real, pred)) * 100;\r\n}\r\n","import React from \"react\";\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport { formatDate, parseDate } from 'react-day-picker/moment';\r\nimport 'react-day-picker/lib/style.css';\r\nimport '../../stylesheets/DatePick.scss'\r\n\r\n// local setting\r\nconst MONTHS = [\r\n    '1月',\r\n    '2月',\r\n    '3月',\r\n    '4月',\r\n    '5月',\r\n    '6月',\r\n    '7月',\r\n    '8月',\r\n    '9月',\r\n    '10月',\r\n    '11月',\r\n    '12月',\r\n];\r\n\r\n// def date range\r\nlet defFrom = null\r\nlet defTo = null\r\n\r\nconst initDefDate = (from, to) => {\r\n    if (defFrom === null && from !== \"\") {\r\n        console.log('from :', from);\r\n        defFrom = from\r\n        defTo = to\r\n    }\r\n}\r\n\r\nconst DatePick = ({ from, to, handleFromChange, handleToChange }) => {\r\n    initDefDate(from, to)\r\n    const modifiers = { start: from, end: to };\r\n    return (\r\n        <div>\r\n            <div className=\"InputFromTo\">\r\n                <DayPickerInput\r\n                    value={from}\r\n                    placeholder=\"From\"\r\n                    formatDate={formatDate}\r\n                    parseDate={parseDate}\r\n                    dayPickerProps={{\r\n                        // data\r\n                        modifiers,\r\n                        selectedDays: [from, { from, to }],\r\n                        // style setting\r\n                        months: MONTHS,\r\n                        enableOutsideDays: false,\r\n                        numberOfMonths: 2,\r\n                        // disabledDays\r\n                        fromMonth: defFrom,\r\n                        toMonth: to,\r\n                        disabledDays: {\r\n                            before: defFrom,\r\n                            after: to\r\n                        },\r\n                        // action\r\n                        onDayClick: () => to.getInput().focus(),\r\n                    }}\r\n                    onDayChange={handleFromChange}\r\n                />\r\n                <span> — </span>\r\n                <span className=\"InputFromTo-to\">\r\n                    <DayPickerInput\r\n                        ref={el => (to = el)}\r\n                        value={to}\r\n                        placeholder=\"To\"\r\n                        formatDate={formatDate}\r\n                        parseDate={parseDate}\r\n                        dayPickerProps={{\r\n                            // data\r\n                            month: from,\r\n                            modifiers,\r\n                            selectedDays: [from, { from, to }],\r\n                            // style setting\r\n                            months: MONTHS,\r\n                            enableOutsideDays: false,\r\n                            numberOfMonths: 2,\r\n                            // disabledDays\r\n                            fromMonth: from,\r\n                            toMonth: defTo,\r\n                            disabledDays: {\r\n                                before: from,\r\n                                after: defTo\r\n                            },\r\n                        }}\r\n                        onDayChange={handleToChange}\r\n                    />\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DatePick","import React from \"react\";\r\n// import CSVReader from \"react-csv-reader\";\r\nimport { CSVReader } from 'react-papaparse'\r\nimport '../../stylesheets/Reader.scss'\r\n\r\nconst papaparseOptions = {\r\n  header: true,\r\n  dynamicTyping: true,\r\n  skipEmptyLines: true,\r\n  transformHeader: header => header.toLowerCase().replace(/\\W/g, \"_\")\r\n};\r\n\r\nconst ForecastReader = ({ handleForce }) => {\r\n  return (\r\n    <div className=\"react-csv\">\r\n      <CSVReader\r\n        onFileLoaded={handleForce}\r\n        parserOptions={papaparseOptions}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default ForecastReader","import React from \"react\";\r\n// Bs components\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Tooltip from 'react-bootstrap/Tooltip'\r\n\r\nconst ClacScore = ({ mape, rmse }) => {\r\n    return (\r\n        <div>\r\n            <Row className=\"align-items-center rmse\">\r\n                <Col xs={4} className=\"score-type\">\r\n                    <Badge pill variant=\"danger\">RMSE</Badge>\r\n                </Col>\r\n                <Col xs={8} className=\"score-value\">\r\n                    <OverlayTrigger overlay={<Tooltip>{rmse}</Tooltip>}>\r\n                        <span>{rmse.toFixed(4)}</span>\r\n                    </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"align-items-center mape\">\r\n                <Col xs={4} className=\"score-type\">\r\n                    <Badge pill variant=\"primary\">MAPE</Badge>\r\n                </Col>\r\n                <Col xs={8} className=\"score-value\">\r\n                    <OverlayTrigger overlay={<Tooltip>{mape}</Tooltip>}>\r\n                        <span>{mape.toFixed(4)}</span>\r\n                    </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ClacScore","import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nconst CalcSaveResult = ({ username, handleChange, handleISaveResult }) => {\r\n    const [validated, setValidated] = useState(false);\r\n    const handleSubmit = event => {\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            // 檢查不通過則取消後續動作\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        } else {\r\n            // 檢查通過才啟動儲存機制\r\n            handleISaveResult();\r\n        }\r\n        setValidated(true);\r\n    };\r\n\r\n    return (\r\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n            <Form.Row>\r\n                <Form.Group as={Col} xs=\"12\" md=\"6\" controlId=\"validationCustomUsername\">\r\n                    <InputGroup>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Enter your name.\"\r\n                            aria-describedby=\"inputGroupPrepend\"\r\n                            value={username}\r\n                            onChange={handleChange}\r\n                            required\r\n                        />\r\n                        <InputGroup.Append>\r\n                            <Button type=\"submit\" variant=\"outline-primary\">Save Result</Button>\r\n                        </InputGroup.Append>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please enter your name.\r\n                        </Form.Control.Feedback>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n            </Form.Row>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default CalcSaveResult\r\n","import React from 'react';\r\nimport { Component } from 'react';\r\nimport { readRemoteFile } from 'react-papaparse'\r\nimport moment from 'moment';\r\nimport { MAPE, RMSE } from '../../lib/Metrics'\r\n// Bs components\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Badge from 'react-bootstrap/Badge'\r\n\r\n// view components\r\nimport DatePick from './DatePick'\r\nimport ForecastReader from './ForecastReader'\r\nimport ClacScore from './ClacScore'\r\nimport CalcSaveResult from './CalcSaveResult'\r\nimport '../../stylesheets/Calculator.scss';\r\n\r\nlet ajaxUrl = \"http://localhost:3020/\"\r\n\r\n\r\nlet defFrom = \"\"\r\nlet defTo = \"\"\r\n\r\nclass Calculator extends Component {\r\n    // ---------------------------------------------------\r\n    // 生命週期\r\n    // ---------------------------------------------------\r\n    constructor() {\r\n        super()\r\n        // this.handleDayClick = this.handleDayClick.bind(this);\r\n        this.state = {\r\n            isFileUpload: false,\r\n            originData: [],\r\n            username: \"\",\r\n            from: \"\",\r\n            to: \"\",\r\n            mape: 0,\r\n            rmse: 0,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('componentDidMount()');\r\n        this.loadOriginData();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log('componentDidUpdate()');\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('componentWillUnmount()');\r\n    }\r\n\r\n    loadOriginData = () => {\r\n        readRemoteFile('https://raw.githubusercontent.com/Chang-Siang/onlinecalcerror/master/public/elec_data/elec_merge_20160101_20190930.csv', {\r\n            download: true,\r\n            header: true,\r\n            complete: (results) => {\r\n                defFrom = new Date(results.data[0].date)\r\n                defTo = new Date(results.data[(results.data).length - 2].date)\r\n                this.setState({\r\n                    originData: results.data,\r\n                    from: defFrom,\r\n                    to: defTo,\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    ajaxServerItemAdd = (addItem) => {\r\n        //處理payload\r\n        const payload = addItem\r\n\r\n        //作POST\r\n        fetch(ajaxUrl + 'ranking', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(payload)\r\n        })\r\n            .then((response) => {\r\n                //ok 代表狀態碼在範圍 200-299\r\n                if (!response.ok) throw new Error(response.statusText)\r\n                return response.json()\r\n            })\r\n            .then((item) => {\r\n                //這裡可以顯示一些訊息，或是結束指示動畫…\r\n                alert(\"儲存成功\")\r\n\r\n            })\r\n            .catch((error) => {\r\n                //這裡可以顯示一些訊息\r\n                // alert(\"儲存失敗\")\r\n                console.error('error:', error)\r\n            })\r\n    }\r\n\r\n    // ---------------------------------------------------\r\n    // 主程式\r\n    // ---------------------------------------------------\r\n    getOriginData = () => {\r\n        const newData = [...this.state.originData]\r\n\r\n        // time filte\r\n        return newData\r\n            .filter((column) => (\r\n                this.state.from <= (new Date(column.date)) && (new Date(column.date)) <= this.state.to\r\n            ))\r\n            .map((column) => (\r\n                column.kW\r\n            ))\r\n    }\r\n\r\n    forecastDataCleaning = (data) => {\r\n        // 展開運算子, 壓平陣列\r\n        let newData = [].concat(...data)\r\n        isNaN(newData[0]) && newData.splice(0, 1)\r\n\r\n        // data clean\r\n        return newData\r\n            .filter((item) => (\r\n                item\r\n            ))\r\n    }\r\n\r\n    dataCheck = (forecastData) => {\r\n        let originData = this.getOriginData()\r\n        // console.log('originData', originData)\r\n        // console.log('forecastData', forecastData)\r\n\r\n        if (originData.length !== forecastData.length) {\r\n            alert('上傳資料長度錯誤')\r\n            return\r\n        }\r\n\r\n        this.calculateScore(originData, forecastData)\r\n    }\r\n\r\n    calculateScore = (originData, forecastData) => {\r\n        let rmse = RMSE(originData, forecastData)\r\n        let mape = MAPE(originData, forecastData)\r\n\r\n        this.setState({\r\n            isFileUpload: true,\r\n            rmse: rmse,\r\n            mape: mape,\r\n        })\r\n    }\r\n\r\n    // ---------------------------------------------------\r\n    // handle action\r\n    // ---------------------------------------------------\r\n    handleFromChange = (from) => {\r\n        // 檢查是否為合法日期\r\n        const temp = new Date(from)\r\n\r\n        if (!isNaN(temp.valueOf())) {\r\n            from = new Date(from.getFullYear(), from.getMonth(), from.getDate(), 0, 0, 0)\r\n            if (defFrom > from) {\r\n                alert('Out of Range.')\r\n                from = defFrom;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            from\r\n        })\r\n    }\r\n\r\n    handleToChange = (to) => {\r\n        // 檢查是否為合法日期\r\n        const temp = new Date(to)\r\n\r\n        if (!isNaN(temp.valueOf())) {\r\n            to = new Date(to.getFullYear(), to.getMonth(), to.getDate(), 0, 0, 0)\r\n            if (defTo < to) {\r\n                to = defTo;\r\n                alert('Out of Range.')\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            to\r\n        }\r\n        )\r\n    }\r\n\r\n    showFromMonth() {\r\n        const { from, to } = this.state;\r\n        if (!from) {\r\n            return;\r\n        }\r\n        if (moment(to).diff(moment(from), 'months') < 2) {\r\n            this.to.getDayPicker().showMonth(from);\r\n        }\r\n    }\r\n\r\n    handleForce = (data, fileName) => {\r\n        // 檢查附檔名，若不符合則判斷上傳失敗\r\n        const validExts = [\".xlsx\", \".xls\", \".csv\"]\r\n        const fileExt = fileName.substring(fileName.lastIndexOf('.'))\r\n        if (validExts.indexOf(fileExt) < 0) {\r\n            alert(\"檔案類型錯誤，可接受的副檔名有：\" + validExts.toString())\r\n            return\r\n        }\r\n        // 清洗 csv\r\n        let forecastData = this.forecastDataCleaning(data.data)\r\n        // 檢查長度\r\n        this.dataCheck(forecastData)\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ username: event.target.value });\r\n    }\r\n\r\n    handleISaveResult = () => {\r\n        const saveItem = {\r\n            id: +new Date(),\r\n            name: this.state.username,\r\n            from: this.state.from,\r\n            to: this.state.to,\r\n            mape: this.state.mape,\r\n            rmse: this.state.rmse\r\n        }\r\n        if (this.state.isFileUpload) {\r\n            // 呼叫 Ajax存入資料庫\r\n            this.ajaxServerItemAdd(saveItem)\r\n            this.setState({ isFileUpload: false });\r\n        } else {\r\n            alert(\"請重新上傳檔案\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Calculator\">\r\n                <Row className=\"align-items-center calculator-date-range\">\r\n                    <Col xs={12} md={4} className=\"row-title\">\r\n                        <h2>Select a Date Range</h2>\r\n                    </Col>\r\n                    <Col xs={12} md={8}>\r\n                        <DatePick\r\n                            from={this.state.from}\r\n                            to={this.state.to}\r\n                            handleFromChange={this.handleFromChange}\r\n                            handleToChange={this.handleToChange}\r\n                        />\r\n                        <Badge pill variant=\"primary\">\r\n                            {(this.state.to - this.state.from) / (1000 * 3600 * 24) + 1} Days\r\n                        </Badge>\r\n                    </Col>\r\n                </Row>\r\n                <hr />\r\n                <Row className=\"align-items-center calculator-csv-reader\">\r\n                    <Col xs={12} md={4} className=\"row-title\">\r\n                        <h2>Select CSV File</h2>\r\n                    </Col>\r\n                    <Col xs={12} md={8}>\r\n                        <ForecastReader handleForce={this.handleForce} />\r\n                        <Badge pill variant=\"secondary\">\r\n                            <a href='https://raw.githubusercontent.com/Chang-Siang/onlinecalcerror/master/public/elec_data/Sample(273Days).csv'>\r\n                                <span className=\"glyphicon glyphicon-download-alt\" aria-hidden=\"true\"></span>\r\n                                File format template\r\n                            </a>\r\n                        </Badge>\r\n                    </Col>\r\n                </Row>\r\n                <hr />\r\n                <Row className=\"align-items-center calculator-score\">\r\n                    <Col xs={12} md={4} className=\"row-title\">\r\n                        <ClacScore rmse={this.state.rmse} mape={this.state.mape} />\r\n                    </Col>\r\n                    <Col xs={12} md={8}>\r\n                        <CalcSaveResult username={this.state.username} handleChange={this.handleChange} handleISaveResult={this.handleISaveResult} />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Calculator","import React from \"react\";\r\nimport moment from 'moment';\r\nimport MaterialTable from 'material-table'\r\n\r\n\r\nconst BasicTable = ({ rankingData, onItemDelClick }) => {\r\n    return (\r\n        <div style={{ maxWidth: '100%' }}>\r\n            <MaterialTable\r\n                title=\"Ranking\"\r\n                columns={[\r\n                    { title: '上傳者', field: 'name' },\r\n                    {\r\n                        title: '預測範圍',\r\n                        field: 'range',\r\n                        render: rowData => <div>[{moment(rowData.from).format('YYYY-MM-DD')}] - [{moment(rowData.to).format('YYYY-MM-DD')}]</div>,\r\n                        customFilterAndSearch: (term, rowData) => moment(rowData.from).format('YYYY-MM-DD').indexOf(term) !== -1 || moment(rowData.to).format('YYYY-MM-DD').indexOf(term) !== -1\r\n                    },\r\n                    {\r\n                        title: 'RMSE',\r\n                        field: 'rmse',\r\n                        type: 'numeric',\r\n                        render: rowData => <div>{rowData.rmse.toFixed(6)}</div>\r\n                    },\r\n                    {\r\n                        title: 'MAPE',\r\n                        field: 'mape',\r\n                        type: 'numeric',\r\n                        render: rowData => <div>{rowData.mape.toFixed(6)}</div>\r\n                    },\r\n                    {\r\n                        title: '上傳時間',\r\n                        field: 'id',\r\n                        render: rowData => <div>{moment(rowData.id).format('YYYY-MM-DD HH:mm')}</div>,\r\n                        customFilterAndSearch: (term, rowData) => moment(rowData.id).format('YYYY-MM-DD HH:mm').indexOf(term) !== -1\r\n                    },\r\n                    // { title: 'Doğum Yeri', field: 'birthCity', lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' } }\r\n                ]}\r\n                data={rankingData}\r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    filtering: true\r\n                }}\r\n                editable={{\r\n                    onRowDelete: rowData =>\r\n                        new Promise((resolve, reject) => {\r\n                            setTimeout(() => {\r\n                                {\r\n                                    onItemDelClick(rowData.tableData.id)\r\n                                }\r\n                                resolve()\r\n                            }, 1000)\r\n                        }),\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BasicTable","import React from \"react\";\r\nimport { Component } from 'react';\r\nimport BasicTable from \"./BasicTable\"\r\n\r\nlet ajaxUrl = \"http://localhost:3020/\"\r\n\r\n\r\n\r\nclass Ranking extends Component {\r\n    //建構式\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            items: [],\r\n            loading: false,\r\n            error: false\r\n        }\r\n    }\r\n\r\n    // 元件狀態\r\n    componentWillMount() {\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.setState({\r\n            loading: true\r\n        })\r\n\r\n        // 元件\"已經\"載入，所以可以載入資料進來\r\n        this.ajaxServerItemsLoad()\r\n    }\r\n\r\n\r\n    // Ajax\r\n    ajaxServerItemsLoad = () => {\r\n        fetch(ajaxUrl + 'ranking', {\r\n            method: 'GET'\r\n        })\r\n            .then((response) => {\r\n                //ok 代表狀態碼在範圍 200-299\r\n                if (!response.ok) throw new Error(response.statusText)\r\n                return response.json()\r\n            })\r\n            .then((itemList) => {\r\n\r\n                //加入{ isEditing: false }屬性\r\n                const items = itemList.map((item) => {\r\n                    return Object.assign({}, item, { range: new Date(item.to) - new Date(item.from) })\r\n                })\r\n                console.log('items :', items);\r\n                //載入資料，重新渲染\r\n                this.setState({\r\n                    items: items,\r\n                    loading: false\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                //這裡可以顯示一些訊息\r\n                console.error(error)\r\n                this.setState({\r\n                    loading: false,\r\n                    error: true\r\n                })\r\n            })\r\n    }\r\n\r\n    ajaxServerItemDelete = (deleteItem) => {\r\n        //處理payload，不需要isEditing欄位\r\n        const { id } = deleteItem\r\n\r\n        //作POST\r\n        fetch(ajaxUrl + `ranking/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then((response) => {\r\n                //ok 代表狀態碼在範圍 200-299\r\n                if (!response.ok) throw new Error(response.statusText)\r\n                return response.json()\r\n            })\r\n            .then((item) => {\r\n                //這裡可以顯示一些訊息，或是結束指示動畫…\r\n                console.log('item:', item)\r\n            })\r\n            .catch((error) => {\r\n                console.error('error:', error)\r\n            })\r\n    }\r\n\r\n    handleDelItem = index => {\r\n        //拷貝一個新陣列\r\n        const newItems = [...this.state.items]\r\n\r\n        // 呼叫 Ajax 刪除資料\r\n        this.ajaxServerItemDelete(newItems[index])\r\n\r\n        newItems.splice(index, 1)\r\n\r\n        //整個陣列重新更新\r\n        this.setState({\r\n            items: newItems,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <BasicTable rankingData={this.state.items} onItemDelClick={this.handleDelItem} />\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Ranking","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport Header from './Header'\r\nimport Footer from './Footer'\r\nimport Calculator from './Calculator'\r\nimport Ranking from './Ranking'\r\n\r\n// import logo from '../logo.svg';\r\n// import '../stylesheets/App.scss'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'glyphicons-only-bootstrap/css/bootstrap.min.css';\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"main\">\r\n        <Header />\r\n        <Container>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Calculator} />\r\n            <Route path=\"/ranking\" component={Ranking} />\r\n          </Switch>\r\n        </Container>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom'\r\nimport './stylesheets/index.scss';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <App />\r\n    </HashRouter>,\r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}